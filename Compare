#!/usr/bin/env php
<?php

use App\repository\issueRepository;
use App\service\htmlLink;
use App\service\configuration;
use App\service\bootstrap;
use Seld\CliPrompt\CliPrompt;

exec('clear');
if(!file_exists('vendor/autoload.php')) {
    print("Running composer install\n\r");
    $dir = __DIR__;
    
    $composer_default_path = $_SERVER['HOME'] . '/composer.phar';
    if (file_exists($composer_default_path)) {
        $composer_executor = 'php ~/composer.phar';
    }
    else {
        $composer_executor = 'composer';
    }

    if (!exec("cd $dir && $composer_executor -q install")) {
        print "If this fails you need to install composer, see here: https://getcomposer.org/download/ \n\r";
    }
}

require 'vendor/autoload.php';

$configuration = new configuration();
$bootstrap = new bootstrap($configuration);
$bootstrap->init();

$repository = new issueRepository($configuration);

$jiraClient = $repository->getJiraClient();

$sprintList = $jiraClient->getSprintList();

print "Select sprint\n\r";
$list = [];
foreach ($sprintList as $id => $name) {
   $list[] = "[$id] $name";
}

print (implode("\n\r", $list) . "\n\r");
$sprintIds = array_keys($sprintList);
$defaultSprint = reset($sprintIds);
print(sprintf("type sprint id default [%s]\n\r", $defaultSprint));
$sprint = CliPrompt::prompt();


if ($sprint === "") {
    $sprint = $defaultSprint;
}

print("Please wait while report is being generated, it will automatically open a browser window\n\r");

$issues = $repository->getIssues($sprint);

$tableHead = ['title', 'ADP', 'Linked issues', 'ADP estimate', 'AU combined estinate', 'Diff'];

$rows = [];
foreach ($issues as $issue) {

    $linkedIssueLinks = array_map(function($issue) {
        return htmlLink::renderIssueLink($issue->key);
    }, $issue->linked);

    $rows[] = [$issue->summary, htmlLink::renderIssueLink($issue->key), implode(" ", $linkedIssueLinks), $issue->estimate, $issue->linkedAggregatedEstimate, $issue->estimate - $issue->linkedAggregatedEstimate];
}

$htmlTable = new \App\service\htmlTable($tableHead, $rows);

$file = '/tmp/issue-estimate-compare-' . date ('Y-m-d-H:i:s', time()) . '.html';

$output = "<h1>Report generated for sprint [$sprint] " . $sprintList[$sprint] . ' at '  . date ('d/m Y H:i') . "</h1>";
$output .= $htmlTable->render();
file_put_contents($file, $output);

exec('open ' . $file);



